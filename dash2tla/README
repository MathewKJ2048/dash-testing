
options:

tests       reads all .json tests in the models folder and converts them in place to .ver files
models      treads all .dsh models in the models folder and converts them into .tla files
run         runs all the tests specified in .ver files for the models specified in .tla files
clean       removes all .ver and .tla files

arguments:
[dir] <dir_name> [debug]

[dir] <dirname> sets the working directory to <dir_name> for that command alone
[debug] produces verbose output


configuration parameters: (as defined in dash2tla/config.json)

"translation_command"   defines the command used to translate .dsh files to .tla files
"run_command"           defines the command used to invoke the TLC model-checker
"shell"                 used to define how the script is to invoke shell commands, set to false for UNIX-based systems
"custom_include"        flag which determines if the tests are run for a specific set of models
"include_list"          defines the names of the models for which the tests ought to be run when "custom_include" is true


API: (functions inside script.py)

translate_model(source_path, destination_path)
  source_path: path to .dsh file
  destination_path: path to .tla file
  translates the .dsh file to a .tla file using the command specified in the config file
  overwrites the .tla file if it already exists

translate_test(source_path, destination_path, debug)
  source_path: path to .json file
  destination_path: path to .ver file
  debug: boolean value, prints debug output if set to true
  translates the test in the .json file into a .ver file for setup_test() to use
  overwrites the .ver file if it already exists

setup_test(model_path, test_path, test_file_path)
  model_path: path to .tla file
  test_path: path to .ver file to test
  test_file_path: path to .tla file output
  sets up a test file with appropriate scaffolding for the test
  overwrites the output file if it already exists

run_test(test_path, test_file_path, debug)
  test_path: path to .ver file which holds the translated test
  test_file_path: path to .tla test file with the appropriate scaffolding for running a test
  debug: boolean value, prints the TLC model checker's whole output, if set to true
  runs the test and returns relevant information as a dictionary
  structure of the result dict:
    actual_time: time measured by the script
    reported_time: time reported by the TLC model checker
    states: number of states found by the TLC model checker
    dictinct_states: number of distinct states found by the TLC model checker
    behavior: counterexample generated by the TLC model checker, if present
    violated: exact invariant which is violated, if present


Main file = ref0-traces.als
RESOLVE: DshSnapshot/elem := this/DshSnapshot
RESOLVE: ordering/elem := this/HandleStatus
RESOLVE: open$5/elem := this/DoorStatus
RESOLVE: open$6/elem := this/GearStatus
MATCH FOUND ON /$alloy4$/models/util/integer.als
MATCH FOUND ON /$alloy4$/models/util/integer.als
MATCH FOUND ON /$alloy4$/models/util/integer.als
MATCH FOUND ON /$alloy4$/models/util/integer.als
MATCH FOUND ON /$alloy4$/models/util/integer.als
Sig this/DshSnapshot, Field dsh_sc_used0: {this/DshSnapshot->this/DshStates}
Sig this/DshSnapshot, Field dsh_conf0: {this/DshSnapshot->this/DshStates}
Sig this/DshSnapshot, Field LandingGear_handle: {this/DshSnapshot->this/HandleStatus}
Sig this/DshSnapshot, Field LandingGear_doors: {this/DshSnapshot->this/DoorStatus}
Sig this/DshSnapshot, Field LandingGear_gears: {this/DshSnapshot->this/GearStatus}
Sig DshSnapshot/Ord, Field First: {DshSnapshot/Ord->this/DshSnapshot}
Sig DshSnapshot/Ord, Field Next: {DshSnapshot/Ord->this/DshSnapshot->this/DshSnapshot}
Sig ordering/Ord, Field First: {ordering/Ord->this/HandleStatus}
Sig ordering/Ord, Field Next: {ordering/Ord->this/HandleStatus->this/HandleStatus}
Sig open$5/Ord, Field First: {open$5/Ord->this/DoorStatus}
Sig open$5/Ord, Field Next: {open$5/Ord->this/DoorStatus->this/DoorStatus}
Sig open$6/Ord, Field First: {open$6/Ord->this/GearStatus}
Sig open$6/Ord, Field Next: {open$6/Ord->this/GearStatus->this/GearStatus}
pred this/close_door, Param d1: {this/DoorStatus}
pred this/close_door, Param d2: {this/DoorStatus}
pred this/close_door, RETURN: {PrimitiveBoolean}
pred this/dsh_initial, Param s: {this/DshSnapshot}
pred this/dsh_initial, RETURN: {PrimitiveBoolean}
pred this/LandingGear_retraction_sequence_pre, Param s: {this/DshSnapshot}
pred this/LandingGear_retraction_sequence_pre, RETURN: {PrimitiveBoolean}
pred this/LandingGear_retraction_sequence_post, Param s: {this/DshSnapshot}
pred this/LandingGear_retraction_sequence_post, Param sn: {this/DshSnapshot}
pred this/LandingGear_retraction_sequence_post, RETURN: {PrimitiveBoolean}
pred this/LandingGear_retraction_sequence, Param s: {this/DshSnapshot}
pred this/LandingGear_retraction_sequence, Param sn: {this/DshSnapshot}
pred this/LandingGear_retraction_sequence, RETURN: {PrimitiveBoolean}
pred this/LandingGear_outgoing_sequence_pre, Param s: {this/DshSnapshot}
pred this/LandingGear_outgoing_sequence_pre, RETURN: {PrimitiveBoolean}
pred this/LandingGear_outgoing_sequence_post, Param s: {this/DshSnapshot}
pred this/LandingGear_outgoing_sequence_post, Param sn: {this/DshSnapshot}
pred this/LandingGear_outgoing_sequence_post, RETURN: {PrimitiveBoolean}
pred this/LandingGear_outgoing_sequence, Param s: {this/DshSnapshot}
pred this/LandingGear_outgoing_sequence, Param sn: {this/DshSnapshot}
pred this/LandingGear_outgoing_sequence, RETURN: {PrimitiveBoolean}
pred this/dsh_small_step, Param s: {this/DshSnapshot}
pred this/dsh_small_step, Param sn: {this/DshSnapshot}
pred this/dsh_small_step, RETURN: {PrimitiveBoolean}
pred this/$$Default, RETURN: {PrimitiveBoolean}
fun integer/add, Param n1: {Int}
fun integer/add, Param n2: {Int}
fun integer/add, RETURN: {Int}
fun integer/plus, Param n1: {Int}
fun integer/plus, Param n2: {Int}
fun integer/plus, RETURN: {Int}
fun integer/sub, Param n1: {Int}
fun integer/sub, Param n2: {Int}
fun integer/sub, RETURN: {Int}
fun integer/minus, Param n1: {Int}
fun integer/minus, Param n2: {Int}
fun integer/minus, RETURN: {Int}
fun integer/mul, Param n1: {Int}
fun integer/mul, Param n2: {Int}
fun integer/mul, RETURN: {Int}
fun integer/div, Param n1: {Int}
fun integer/div, Param n2: {Int}
fun integer/div, RETURN: {Int}
fun integer/rem, Param n1: {Int}
fun integer/rem, Param n2: {Int}
fun integer/rem, RETURN: {Int}
fun integer/negate, Param n: {Int}
fun integer/negate, RETURN: {Int}
pred integer/eq, Param n1: {Int}
pred integer/eq, Param n2: {Int}
pred integer/eq, RETURN: {PrimitiveBoolean}
pred integer/gt, Param n1: {Int}
pred integer/gt, Param n2: {Int}
pred integer/gt, RETURN: {PrimitiveBoolean}
pred integer/lt, Param n1: {Int}
pred integer/lt, Param n2: {Int}
pred integer/lt, RETURN: {PrimitiveBoolean}
pred integer/gte, Param n1: {Int}
pred integer/gte, Param n2: {Int}
pred integer/gte, RETURN: {PrimitiveBoolean}
pred integer/lte, Param n1: {Int}
pred integer/lte, Param n2: {Int}
pred integer/lte, RETURN: {PrimitiveBoolean}
pred integer/zero, Param n: {Int}
pred integer/zero, RETURN: {PrimitiveBoolean}
pred integer/pos, Param n: {Int}
pred integer/pos, RETURN: {PrimitiveBoolean}
pred integer/neg, Param n: {Int}
pred integer/neg, RETURN: {PrimitiveBoolean}
pred integer/nonpos, Param n: {Int}
pred integer/nonpos, RETURN: {PrimitiveBoolean}
pred integer/nonneg, Param n: {Int}
pred integer/nonneg, RETURN: {PrimitiveBoolean}
fun integer/signum, Param n: {Int}
fun integer/signum, RETURN: {Int}
fun integer/int2elem, Param i: {Int}
fun integer/int2elem, Param next: {univ->univ}
fun integer/int2elem, Param s: {univ}
fun integer/int2elem, RETURN: {univ}
fun integer/elem2int, Param e: {univ}
fun integer/elem2int, Param next: {univ->univ}
fun integer/elem2int, RETURN: {Int}
fun integer/max, RETURN: {Int}
fun integer/max, Param es: {Int}
fun integer/max, RETURN: {Int}
fun integer/min, RETURN: {Int}
fun integer/min, Param es: {Int}
fun integer/min, RETURN: {Int}
fun integer/next, RETURN: {Int->Int}
fun integer/prev, RETURN: {Int->Int}
fun integer/prevs, Param e: {Int}
fun integer/prevs, RETURN: {Int}
fun integer/nexts, Param e: {Int}
fun integer/nexts, RETURN: {Int}
fun integer/larger, Param e1: {Int}
fun integer/larger, Param e2: {Int}
fun integer/larger, RETURN: {Int}
fun integer/smaller, Param e1: {Int}
fun integer/smaller, Param e2: {Int}
fun integer/smaller, RETURN: {Int}
pred integer/$$Default, RETURN: {PrimitiveBoolean}
pred boolean/isTrue, Param b: {boolean/Bool}
pred boolean/isTrue, RETURN: {PrimitiveBoolean}
pred boolean/isFalse, Param b: {boolean/Bool}
pred boolean/isFalse, RETURN: {PrimitiveBoolean}
fun boolean/Not, Param b: {boolean/Bool}
fun boolean/Not, RETURN: {boolean/Bool}
fun boolean/And, Param b1: {boolean/Bool}
fun boolean/And, Param b2: {boolean/Bool}
fun boolean/And, RETURN: {boolean/Bool}
fun boolean/Or, Param b1: {boolean/Bool}
fun boolean/Or, Param b2: {boolean/Bool}
fun boolean/Or, RETURN: {boolean/Bool}
fun boolean/Xor, Param b1: {boolean/Bool}
fun boolean/Xor, Param b2: {boolean/Bool}
fun boolean/Xor, RETURN: {boolean/Bool}
fun boolean/Nand, Param b1: {boolean/Bool}
fun boolean/Nand, Param b2: {boolean/Bool}
fun boolean/Nand, RETURN: {boolean/Bool}
fun boolean/Nor, Param b1: {boolean/Bool}
fun boolean/Nor, Param b2: {boolean/Bool}
fun boolean/Nor, RETURN: {boolean/Bool}
fun boolean/subset_, Param s1: {boolean/Bool}
fun boolean/subset_, Param s2: {boolean/Bool}
fun boolean/subset_, RETURN: {boolean/Bool}
pred boolean/$$Default, RETURN: {PrimitiveBoolean}
fun DshSnapshot/loop, RETURN: {this/DshSnapshot->this/DshSnapshot}
fun DshSnapshot/first, RETURN: {this/DshSnapshot}
fun DshSnapshot/last, RETURN: {this/DshSnapshot}
fun DshSnapshot/next, RETURN: {this/DshSnapshot->this/DshSnapshot}
fun DshSnapshot/prev, RETURN: {this/DshSnapshot->this/DshSnapshot}
fun DshSnapshot/past, RETURN: {this/DshSnapshot->this/DshSnapshot}
fun DshSnapshot/future, RETURN: {this/DshSnapshot->this/DshSnapshot}
fun DshSnapshot/upto, Param s: {this/DshSnapshot}
fun DshSnapshot/upto, Param s_next: {this/DshSnapshot}
fun DshSnapshot/upto, RETURN: {this/DshSnapshot}
pred DshSnapshot/finite, RETURN: {PrimitiveBoolean}
pred DshSnapshot/infinite, RETURN: {PrimitiveBoolean}
fun ordering/first, RETURN: {this/HandleStatus}
fun ordering/last, RETURN: {this/HandleStatus}
fun ordering/prev, RETURN: {this/HandleStatus->this/HandleStatus}
fun ordering/next, RETURN: {this/HandleStatus->this/HandleStatus}
fun ordering/prevs, Param e: {this/HandleStatus}
fun ordering/prevs, RETURN: {this/HandleStatus}
fun ordering/nexts, Param e: {this/HandleStatus}
fun ordering/nexts, RETURN: {this/HandleStatus}
pred ordering/lt, Param e1: {this/HandleStatus}
pred ordering/lt, Param e2: {this/HandleStatus}
pred ordering/lt, RETURN: {PrimitiveBoolean}
pred ordering/gt, Param e1: {this/HandleStatus}
pred ordering/gt, Param e2: {this/HandleStatus}
pred ordering/gt, RETURN: {PrimitiveBoolean}
pred ordering/lte, Param e1: {this/HandleStatus}
pred ordering/lte, Param e2: {this/HandleStatus}
pred ordering/lte, RETURN: {PrimitiveBoolean}
pred ordering/gte, Param e1: {this/HandleStatus}
pred ordering/gte, Param e2: {this/HandleStatus}
pred ordering/gte, RETURN: {PrimitiveBoolean}
fun ordering/larger, Param e1: {this/HandleStatus}
fun ordering/larger, Param e2: {this/HandleStatus}
fun ordering/larger, RETURN: {this/HandleStatus}
fun ordering/smaller, Param e1: {this/HandleStatus}
fun ordering/smaller, Param e2: {this/HandleStatus}
fun ordering/smaller, RETURN: {this/HandleStatus}
fun ordering/max, Param es: {this/HandleStatus}
fun ordering/max, RETURN: {this/HandleStatus}
fun ordering/min, Param es: {this/HandleStatus}
fun ordering/min, RETURN: {this/HandleStatus}
pred ordering/run$1, RETURN: {PrimitiveBoolean}
pred ordering/run$2, RETURN: {PrimitiveBoolean}
pred ordering/run$3, RETURN: {PrimitiveBoolean}
pred ordering/run$4, RETURN: {PrimitiveBoolean}
pred ordering/run$5, RETURN: {PrimitiveBoolean}
fun open$5/first, RETURN: {this/DoorStatus}
fun open$5/last, RETURN: {this/DoorStatus}
fun open$5/prev, RETURN: {this/DoorStatus->this/DoorStatus}
fun open$5/next, RETURN: {this/DoorStatus->this/DoorStatus}
fun open$5/prevs, Param e: {this/DoorStatus}
fun open$5/prevs, RETURN: {this/DoorStatus}
fun open$5/nexts, Param e: {this/DoorStatus}
fun open$5/nexts, RETURN: {this/DoorStatus}
pred open$5/lt, Param e1: {this/DoorStatus}
pred open$5/lt, Param e2: {this/DoorStatus}
pred open$5/lt, RETURN: {PrimitiveBoolean}
pred open$5/gt, Param e1: {this/DoorStatus}
pred open$5/gt, Param e2: {this/DoorStatus}
pred open$5/gt, RETURN: {PrimitiveBoolean}
pred open$5/lte, Param e1: {this/DoorStatus}
pred open$5/lte, Param e2: {this/DoorStatus}
pred open$5/lte, RETURN: {PrimitiveBoolean}
pred open$5/gte, Param e1: {this/DoorStatus}
pred open$5/gte, Param e2: {this/DoorStatus}
pred open$5/gte, RETURN: {PrimitiveBoolean}
fun open$5/larger, Param e1: {this/DoorStatus}
fun open$5/larger, Param e2: {this/DoorStatus}
fun open$5/larger, RETURN: {this/DoorStatus}
fun open$5/smaller, Param e1: {this/DoorStatus}
fun open$5/smaller, Param e2: {this/DoorStatus}
fun open$5/smaller, RETURN: {this/DoorStatus}
fun open$5/max, Param es: {this/DoorStatus}
fun open$5/max, RETURN: {this/DoorStatus}
fun open$5/min, Param es: {this/DoorStatus}
fun open$5/min, RETURN: {this/DoorStatus}
pred open$5/run$1, RETURN: {PrimitiveBoolean}
pred open$5/run$2, RETURN: {PrimitiveBoolean}
pred open$5/run$3, RETURN: {PrimitiveBoolean}
pred open$5/run$4, RETURN: {PrimitiveBoolean}
pred open$5/run$5, RETURN: {PrimitiveBoolean}
fun open$6/first, RETURN: {this/GearStatus}
fun open$6/last, RETURN: {this/GearStatus}
fun open$6/prev, RETURN: {this/GearStatus->this/GearStatus}
fun open$6/next, RETURN: {this/GearStatus->this/GearStatus}
fun open$6/prevs, Param e: {this/GearStatus}
fun open$6/prevs, RETURN: {this/GearStatus}
fun open$6/nexts, Param e: {this/GearStatus}
fun open$6/nexts, RETURN: {this/GearStatus}
pred open$6/lt, Param e1: {this/GearStatus}
pred open$6/lt, Param e2: {this/GearStatus}
pred open$6/lt, RETURN: {PrimitiveBoolean}
pred open$6/gt, Param e1: {this/GearStatus}
pred open$6/gt, Param e2: {this/GearStatus}
pred open$6/gt, RETURN: {PrimitiveBoolean}
pred open$6/lte, Param e1: {this/GearStatus}
pred open$6/lte, Param e2: {this/GearStatus}
pred open$6/lte, RETURN: {PrimitiveBoolean}
pred open$6/gte, Param e1: {this/GearStatus}
pred open$6/gte, Param e2: {this/GearStatus}
pred open$6/gte, RETURN: {PrimitiveBoolean}
fun open$6/larger, Param e1: {this/GearStatus}
fun open$6/larger, Param e2: {this/GearStatus}
fun open$6/larger, RETURN: {this/GearStatus}
fun open$6/smaller, Param e1: {this/GearStatus}
fun open$6/smaller, Param e2: {this/GearStatus}
fun open$6/smaller, RETURN: {this/GearStatus}
fun open$6/max, Param es: {this/GearStatus}
fun open$6/max, RETURN: {this/GearStatus}
fun open$6/min, Param es: {this/GearStatus}
fun open$6/min, RETURN: {this/GearStatus}
pred open$6/run$1, RETURN: {PrimitiveBoolean}
pred open$6/run$2, RETURN: {PrimitiveBoolean}
pred open$6/run$3, RETURN: {PrimitiveBoolean}
pred open$6/run$4, RETURN: {PrimitiveBoolean}
pred open$6/run$5, RETURN: {PrimitiveBoolean}
pred this/close_door, BODY:{PrimitiveBoolean}
pred this/dsh_initial, BODY:{PrimitiveBoolean}
pred this/LandingGear_retraction_sequence_pre, BODY:{PrimitiveBoolean}
pred this/LandingGear_retraction_sequence_post, BODY:{PrimitiveBoolean}
pred this/LandingGear_retraction_sequence, BODY:{PrimitiveBoolean}
pred this/LandingGear_outgoing_sequence_pre, BODY:{PrimitiveBoolean}
pred this/LandingGear_outgoing_sequence_post, BODY:{PrimitiveBoolean}
pred this/LandingGear_outgoing_sequence, BODY:{PrimitiveBoolean}
pred this/dsh_small_step, BODY:{PrimitiveBoolean}
pred this/$$Default, BODY:{PrimitiveBoolean}
Fact inv: {PrimitiveBoolean}
Fact dsh_traces_fact: {PrimitiveBoolean}
fun integer/add, BODY:{Int}
fun integer/plus, BODY:{Int}
fun integer/sub, BODY:{Int}
fun integer/minus, BODY:{Int}
fun integer/mul, BODY:{Int}
fun integer/div, BODY:{Int}
fun integer/rem, BODY:{Int}
fun integer/negate, BODY:{Int}
pred integer/eq, BODY:{PrimitiveBoolean}
pred integer/gt, BODY:{PrimitiveBoolean}
pred integer/lt, BODY:{PrimitiveBoolean}
pred integer/gte, BODY:{PrimitiveBoolean}
pred integer/lte, BODY:{PrimitiveBoolean}
pred integer/zero, BODY:{PrimitiveBoolean}
pred integer/pos, BODY:{PrimitiveBoolean}
pred integer/neg, BODY:{PrimitiveBoolean}
pred integer/nonpos, BODY:{PrimitiveBoolean}
pred integer/nonneg, BODY:{PrimitiveBoolean}
fun integer/signum, BODY:{Int}
fun integer/int2elem, BODY:{univ}
fun integer/elem2int, BODY:{Int}
fun integer/max, BODY:{Int}
fun integer/max, BODY:{Int}
fun integer/min, BODY:{Int}
fun integer/min, BODY:{Int}
fun integer/next, BODY:{Int->Int}
fun integer/prev, BODY:{Int->Int}
fun integer/prevs, BODY:{Int}
fun integer/nexts, BODY:{Int}
fun integer/larger, BODY:{Int}
fun integer/smaller, BODY:{Int}
pred integer/$$Default, BODY:{PrimitiveBoolean}
pred boolean/isTrue, BODY:{PrimitiveBoolean}
pred boolean/isFalse, BODY:{PrimitiveBoolean}
fun boolean/Not, BODY:{boolean/Bool}
fun boolean/And, BODY:{boolean/Bool}
fun boolean/Or, BODY:{boolean/Bool}
fun boolean/Xor, BODY:{boolean/Bool}
fun boolean/Nand, BODY:{boolean/Bool}
fun boolean/Nor, BODY:{boolean/Bool}
fun boolean/subset_, BODY:{boolean/Bool}
pred boolean/$$Default, BODY:{PrimitiveBoolean}
fun DshSnapshot/loop, BODY:{this/DshSnapshot->this/DshSnapshot}
fun DshSnapshot/first, BODY:{this/DshSnapshot}
fun DshSnapshot/last, BODY:{this/DshSnapshot}
fun DshSnapshot/next, BODY:{this/DshSnapshot->this/DshSnapshot}
fun DshSnapshot/prev, BODY:{this/DshSnapshot->this/DshSnapshot}
fun DshSnapshot/past, BODY:{this/DshSnapshot->this/DshSnapshot}
fun DshSnapshot/future, BODY:{this/DshSnapshot->univ}
fun DshSnapshot/upto, BODY:{univ}
pred DshSnapshot/finite, BODY:{PrimitiveBoolean}
pred DshSnapshot/infinite, BODY:{PrimitiveBoolean}
Assertion check$1: {PrimitiveBoolean}
Fact DshSnapshot/Ord$fact: {PrimitiveBoolean}
fun ordering/first, BODY:{this/HandleStatus}
fun ordering/last, BODY:{this/HandleStatus}
fun ordering/prev, BODY:{this/HandleStatus->this/HandleStatus}
fun ordering/next, BODY:{this/HandleStatus->this/HandleStatus}
fun ordering/prevs, BODY:{this/HandleStatus}
fun ordering/nexts, BODY:{this/HandleStatus}
pred ordering/lt, BODY:{PrimitiveBoolean}
pred ordering/gt, BODY:{PrimitiveBoolean}
pred ordering/lte, BODY:{PrimitiveBoolean}
pred ordering/gte, BODY:{PrimitiveBoolean}
fun ordering/larger, BODY:{this/HandleStatus}
fun ordering/smaller, BODY:{this/HandleStatus}
fun ordering/max, BODY:{this/HandleStatus}
fun ordering/min, BODY:{this/HandleStatus}
pred ordering/run$1, BODY:{PrimitiveBoolean}
pred ordering/run$2, BODY:{PrimitiveBoolean}
pred ordering/run$3, BODY:{PrimitiveBoolean}
pred ordering/run$4, BODY:{PrimitiveBoolean}
pred ordering/run$5, BODY:{PrimitiveBoolean}
Assertion correct: {PrimitiveBoolean}
Fact ordering/Ord$fact: {PrimitiveBoolean}
fun open$5/first, BODY:{this/DoorStatus}
fun open$5/last, BODY:{this/DoorStatus}
fun open$5/prev, BODY:{this/DoorStatus->this/DoorStatus}
fun open$5/next, BODY:{this/DoorStatus->this/DoorStatus}
fun open$5/prevs, BODY:{this/DoorStatus}
fun open$5/nexts, BODY:{this/DoorStatus}
pred open$5/lt, BODY:{PrimitiveBoolean}
pred open$5/gt, BODY:{PrimitiveBoolean}
pred open$5/lte, BODY:{PrimitiveBoolean}
pred open$5/gte, BODY:{PrimitiveBoolean}
fun open$5/larger, BODY:{this/DoorStatus}
fun open$5/smaller, BODY:{this/DoorStatus}
fun open$5/max, BODY:{this/DoorStatus}
fun open$5/min, BODY:{this/DoorStatus}
pred open$5/run$1, BODY:{PrimitiveBoolean}
pred open$5/run$2, BODY:{PrimitiveBoolean}
pred open$5/run$3, BODY:{PrimitiveBoolean}
pred open$5/run$4, BODY:{PrimitiveBoolean}
pred open$5/run$5, BODY:{PrimitiveBoolean}
Assertion correct: {PrimitiveBoolean}
Fact open$5/Ord$fact: {PrimitiveBoolean}
fun open$6/first, BODY:{this/GearStatus}
fun open$6/last, BODY:{this/GearStatus}
fun open$6/prev, BODY:{this/GearStatus->this/GearStatus}
fun open$6/next, BODY:{this/GearStatus->this/GearStatus}
fun open$6/prevs, BODY:{this/GearStatus}
fun open$6/nexts, BODY:{this/GearStatus}
pred open$6/lt, BODY:{PrimitiveBoolean}
pred open$6/gt, BODY:{PrimitiveBoolean}
pred open$6/lte, BODY:{PrimitiveBoolean}
pred open$6/gte, BODY:{PrimitiveBoolean}
fun open$6/larger, BODY:{this/GearStatus}
fun open$6/smaller, BODY:{this/GearStatus}
fun open$6/max, BODY:{this/GearStatus}
fun open$6/min, BODY:{this/GearStatus}
pred open$6/run$1, BODY:{PrimitiveBoolean}
pred open$6/run$2, BODY:{PrimitiveBoolean}
pred open$6/run$3, BODY:{PrimitiveBoolean}
pred open$6/run$4, BODY:{PrimitiveBoolean}
pred open$6/run$5, BODY:{PrimitiveBoolean}
Assertion correct: {PrimitiveBoolean}
Fact open$6/Ord$fact: {PrimitiveBoolean}
Forced to be exact: this/DshSnapshot
Forced to be exact: this/HandleStatus
Forced to be exact: this/DoorStatus
Forced to be exact: this/GearStatus
Executing "Run Default for 4 but 4 int, 4 seq expect 1"
   Sig this/UP scope <= 1
   Sig this/DOWN scope <= 1
   Sig this/CLOSED scope <= 1
   Sig this/OPENING scope <= 1
   Sig this/OPEN scope <= 1
   Sig this/CLOSING scope <= 1
   Sig this/RETRACTED scope <= 1
   Sig this/EXTENDING scope <= 1
   Sig this/EXTENDED scope <= 1
   Sig this/RETRACTING scope <= 1
   Sig boolean/True scope <= 1
   Sig boolean/False scope <= 1
   Sig DshSnapshot/Ord scope <= 1
   Sig ordering/Ord scope <= 1
   Sig open$5/Ord scope <= 1
   Sig open$6/Ord scope <= 1
   Sig this/HandleStatus scope <= 2
   Sig this/DoorStatus scope <= 4
   Sig this/GearStatus scope <= 4
   Sig boolean/Bool scope <= 2
   Sig this/DshStates scope <= 4
   Sig this/DshSnapshot scope <= 4
   Sig this/LandingGear scope <= 4
   Sig this/HandleStatus forced to have exactly 2 atoms.
   Sig this/DoorStatus forced to have exactly 4 atoms.
   Sig this/GearStatus forced to have exactly 4 atoms.
   Sig this/DshSnapshot forced to have exactly 4 atoms.
   Sig DshSnapshot/back in [[DshSnapshot$0], [DshSnapshot$1], [DshSnapshot$2], [DshSnapshot$3]]
   Field ordering/Ord.First == [[ordering/Ord$0, UP$0]]
   Field ordering/Ord.Next == [[ordering/Ord$0, UP$0, DOWN$0]]
   Field open$5/Ord.First == [[open$5/Ord$0, CLOSED$0]]
   Field open$5/Ord.Next == [[open$5/Ord$0, CLOSED$0, OPENING$0], [open$5/Ord$0, OPENING$0, OPEN$0], [open$5/Ord$0, OPEN$0, CLOSING$0]]
   Field open$6/Ord.First == [[open$6/Ord$0, RETRACTED$0]]
   Field open$6/Ord.Next == [[open$6/Ord$0, RETRACTED$0, EXTENDING$0], [open$6/Ord$0, EXTENDING$0, EXTENDED$0], [open$6/Ord$0, EXTENDED$0, RETRACTING$0]]
   Sig this/HandleStatus == [[UP$0], [DOWN$0]]
   Sig this/UP == [[UP$0]]
   Sig this/DOWN == [[DOWN$0]]
   Sig this/DoorStatus == [[CLOSED$0], [OPENING$0], [OPEN$0], [CLOSING$0]]
   Sig this/CLOSED == [[CLOSED$0]]
   Sig this/OPENING == [[OPENING$0]]
   Sig this/OPEN == [[OPEN$0]]
   Sig this/CLOSING == [[CLOSING$0]]
   Sig this/GearStatus == [[RETRACTED$0], [EXTENDING$0], [EXTENDED$0], [RETRACTING$0]]
   Sig this/RETRACTED == [[RETRACTED$0]]
   Sig this/EXTENDING == [[EXTENDING$0]]
   Sig this/EXTENDED == [[EXTENDED$0]]
   Sig this/RETRACTING == [[RETRACTING$0]]
   Sig this/DshStates in [[DshStates$0], [DshStates$1], [DshStates$2], [DshStates$3]]
   Sig this/LandingGear in [[DshStates$0], [DshStates$1], [DshStates$2], [DshStates$3]]
   Sig this/DshSnapshot == [[DshSnapshot$0], [DshSnapshot$1], [DshSnapshot$2], [DshSnapshot$3]]
   Sig boolean/Bool in [[boolean/True$0], [boolean/False$0]]
   Sig boolean/True == [[boolean/True$0]]
   Sig boolean/False == [[boolean/False$0]]
   Sig DshSnapshot/Ord == [[DshSnapshot/Ord$0]]
   Sig ordering/Ord == [[ordering/Ord$0]]
   Sig open$5/Ord == [[open$5/Ord$0]]
   Sig open$6/Ord == [[open$6/Ord$0]]
Generating facts...
Simplifying the bounds...
Solver=mem Bitwidth=4 MaxSeq=4 Symmetry=OFF Mode=batch
Generating the solution...
   544 vars. 80 primary vars. 924 clauses. 12345ms.


Exception: Fatal error:
Unknown exception occurred: kodkod.engine.AbortedException: kodkod.engine.satlab.SATAbortedException: java.io.IOException: Cannot run program "/zweb/sat/mem": error=2, No such file or directory